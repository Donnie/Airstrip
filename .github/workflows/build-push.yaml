name: Airstrip Build and Deploy
on:
  push:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout source code"
      uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    # So now you can use Actions' own caching!
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASS }}
    - name: "Build and push docker image"
      uses: docker/build-push-action@v3
      with:
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
        tags: donnieashok/airstrip:prod
        push: true
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
    - name: Pull image into production
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.GCP_HOST }}
        username: ${{ secrets.GCP_USER }}
        key: ${{ secrets.GCP_SECRET }}
        script: |
          sudo docker pull donnieashok/airstrip:prod
          sudo docker stop airstrip || true
          sudo docker rm airstrip || true
          echo "${{ secrets.ENV }}" > ~/airstrip/.env
          sudo docker run -d --restart on-failure -v ~/airstrip/db:/db -v ~/airstrip/images:/images --env-file ~/airstrip/.env --name airstrip donnieashok/airstrip:prod
          rm ~/airstrip/.env